"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var AcycConfiguration = /*#__PURE__*/function () {
  function AcycConfiguration() {
    _classCallCheck(this, AcycConfiguration);

    this.setCheckDBConfiguration();
  }

  _createClass(AcycConfiguration, [{
    key: "setCheckDBConfiguration",
    value: function setCheckDBConfiguration() {
      jQuery('#checkdb_button').on('click', function (e) {
        e.preventDefault();
        var $reportContainer = jQuery('#checkdb_report');
        $reportContainer.html('<i class="acycicon-circle-o-notch acycicon-spin"></i>');
        AjaxService.post(ACYC_AJAX_URL, {
          page: 'acychecker_configuration',
          ctrl: 'configuration',
          task: 'ajaxCheckDB'
        }).then(function (response) {
          $reportContainer.html(response.data.html);
        });
      });
    }
  }]);

  return AcycConfiguration;
}();

jQuery(function () {
  new AcycConfiguration();
});