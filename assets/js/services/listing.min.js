"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ListingService = /*#__PURE__*/function () {
  function ListingService() {
    _classCallCheck(this, ListingService);
  }

  _createClass(ListingService, null, [{
    key: "initOrdering",
    value: function initOrdering() {
      document.getElementById('acyc__listing__ordering').addEventListener('change', function () {
        var form = document.querySelector('.acyc_form');
        form.querySelector('[name="task"]').value = 'listing';
        form.submit();
      });
      document.getElementById('acyc__listing__ordering__sort-order').addEventListener('click', function () {
        var inputSortOrder = document.getElementById('acyc__listing__ordering__sort-order--input');

        if (inputSortOrder.value === 'asc') {
          inputSortOrder.value = 'desc';
        } else {
          inputSortOrder.value = 'asc';
        }

        var form = document.querySelector('.acyc_form');
        form.querySelector('[name="task"]').value = 'listing';
        form.submit();
      });
    }
  }, {
    key: "setCheckAll",
    value: function setCheckAll() {
      jQuery('#checkbox_all').off('change').on('change', function () {
        var listing_checkboxes = jQuery('[name="elements_checked[]"]');

        if (jQuery(this).is(':checked')) {
          listing_checkboxes.prop('checked', true);
        } else {
          listing_checkboxes.prop('checked', false);
        }

        listing_checkboxes.trigger('change');
      });
    }
  }, {
    key: "setCheckboxesActions",
    value: function setCheckboxesActions() {
      var listing_checkboxes = jQuery('[name="elements_checked[]"]');
      listing_checkboxes.off('change').on('change', function () {
        var nbChecked = jQuery('[name="elements_checked[]"]:checked').length; // Shows the "Actions" dropdown when a box is checked

        if (nbChecked > 0) {
          jQuery('#listing_actions').removeAttr('disabled');
        } else {
          jQuery('#listing_actions').attr('disabled', 'true');
        } // Updates the "Check all" box


        if (jQuery('[name="elements_checked[]"]:not(:checked)').length > 0) {
          jQuery('#checkbox_all').prop('checked', false);
        } else {
          jQuery('#checkbox_all').prop('checked', true);
        }
      });
      listing_checkboxes.trigger('change');
    }
  }, {
    key: "setSelectActions",
    value: function setSelectActions() {
      function triggerAction() {
        var action = jQuery(this).val();
        var fastAction = false;

        if (!action || action === '0') {
          action = jQuery(this).attr('data-acyc-action');
          fastAction = true;
        }

        var deleteMessageComplete = jQuery('#acyc__listing__action__delete-message').val();
        var confirmMessage = '';

        switch (action) {
          case 'delete':
            confirmMessage = "".concat(ACYC_LANGUAGES.ACYC_ARE_YOU_SURE_DELETE, " ").concat(deleteMessageComplete);
            break;

          case 'unblockUsers':
            confirmMessage = ACYC_LANGUAGES.ACYC_UNBLOCK_USERS_CONFIRM;
            break;

          case 'blockUsers':
            confirmMessage = ACYC_LANGUAGES.ACYC_BLOCK_USERS_CONFIRM;
            break;

          case 'deleteUsers':
            confirmMessage = ACYC_LANGUAGES.ACYC_DELETE_USERS_CONFIRM;
            break;

          default:
            confirmMessage = ACYC_LANGUAGES.ACYC_ARE_YOU_SURE;
        }

        if (confirm(confirmMessage)) {
          var form = jQuery(this).closest('#acyc_form');
          var ctrl = jQuery(this).attr('data-ctrl');

          if (ctrl !== undefined) {
            form.find('[name="return_listing"]').val(form.find('[name="ctrl"]').val());
            form.find('[name="ctrl"]').val(ctrl);
          }

          form.find('[name="task"]').val(action);

          if (fastAction) {
            jQuery(':checkbox').prop('checked', false);
            var checkboxId = '#checkbox_' + jQuery(this).attr('data-acyc-elementid');
            jQuery(checkboxId).prop('checked', true);
          }

          form.submit();
        } else {
          jQuery(this).val('0');
        }
      }

      jQuery('#listing_actions').off('change').on('change', triggerAction);
      jQuery('.fastAction').on('click', triggerAction);
    }
  }, {
    key: "setActionButtons",
    value: function setActionButtons() {
      jQuery('button[data-acyc-redirect]').off('click').on('click', function () {
        var confirmationMessage = jQuery(this).attr('data-acyc-confirmation');
        if (confirmationMessage && confirmationMessage.length > 0 && !confirm(confirmationMessage)) return;
        window.location = jQuery(this).attr('data-acyc-redirect');
      });
    }
  }]);

  return ListingService;
}();