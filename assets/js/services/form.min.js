"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var FormService = /*#__PURE__*/function () {
  function FormService() {
    _classCallCheck(this, FormService);
  }

  _createClass(FormService, null, [{
    key: "setSubmitButton",
    value: function setSubmitButton() {
      jQuery('.acyc_button_submit').off('click').on('click', function (e) {
        if (jQuery(this).hasClass('disabled')) {
          return false;
        } // stop submit


        e.preventDefault();
        var condition = jQuery(this).attr('data-condition');

        if (condition && typeof jQuery[condition] === 'function' && !jQuery[condition]()) {
          return false;
        }

        var $form = jQuery('#acyc_form');
        var task = jQuery(this).attr('data-task');
        var controller = jQuery(this).attr('data-ctrl');

        if (controller !== undefined) {
          $form.find('[name=ctrl]').val(controller);
        }

        $form.find('[name="task"]').val(task); // This code is for the required fields and the Edge compatibility

        var $buttonSubmit = $form.find('#formSubmit');

        if ($buttonSubmit[0] === undefined) {
          var evt = new MouseEvent('click');
          document.querySelector('#formSubmit').dispatchEvent(evt);
        } else {
          $buttonSubmit.trigger('click');
        }
      });
    }
  }]);

  return FormService;
}();